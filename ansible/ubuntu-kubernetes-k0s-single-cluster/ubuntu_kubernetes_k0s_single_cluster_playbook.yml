---

#  https://docs.k0sproject.io/v1.28.4+k0s.0/install/

- name: Playbook for installing a single node k0s cluster
  hosts: all

  vars:
    user_home: "{{ ansible_env.HOME }}"
    bashrc_file: "{{ user_home }}/.bashrc"
    kube_config_dir: "{{ user_home }}/.kube"
    kube_config_file: "{{ kube_config_dir }}/config"

  tasks:
    - name: Verify if k0s Kubernetes is installed or not
      command: "which k0s"
      register: k0s_command_exists
      ignore_errors: true

    - name: Install and start k0s Kubernetes
      block:
        - name: Download and install k0s
          shell: "curl -sSLf https://get.k0s.sh | sudo sh"
          become: yes

        - name: Install k0s Controller
          command: "k0s install controller --single"
          become: yes

        - name: Start k0s Controller
          command: "k0s start"
          become: yes

        - name: Reboot host and wait for it to restart
          reboot:
            msg: "Reboot initiated by Ansible"
            connect_timeout: 5    # Disconnect after 5 seconds if ssh isnâ€™t working
            reboot_timeout: 600   # Keep attempting to connect for 10 minutes (600 seconds)
            pre_reboot_delay: 0
            post_reboot_delay: 30 # Wait 30 seconds
            test_command: whoami  # Attempt to connect via ssh and run whoami
          become: yes

        - name: Install kubectl
          command: "snap install kubectl --classic"
          become: yes

        - name: Create .kube folder
          command: "mkdir -p {{ kube_config_dir }}"
          become: no

        - name: Wait until the unique node state is "Ready"
          shell: "k0s kubectl get nodes --no-headers | head -n 1 | awk '{print $2}'"
          register: node_status
          until: node_status.stdout_lines | length > 0 and node_status.stdout_lines[0] == "Ready"
          retries: 60   # Max number of retries
          delay: 5      # Interval of time between retries (in seconds)
          ignore_errors: yes
          become: yes

        - name: Creating the config file
          shell: "k0s kubeconfig admin > {{ kube_config_file }}"
          become: yes

        - name: Set correct owner and permissions to kube config file
          shell: "chown {{ ansible_ssh_user }}:{{ ansible_ssh_user }} {{ kube_config_file }} && chmod 600 {{ kube_config_file }}"
          become: yes

        - name: Gather kubeconfig file metadata
          stat:
            path: "{{ kube_config_file }}"
          register: kubeconfig_info
          become: no

        - name: Verify that the kubeconfig file was created successfully
          fail:
            msg: "The kubeconfig file does not exist or is empty!"
          when: kubeconfig_info.stat.exists == false or kubeconfig_info.stat.size == 0
          become: no

        - name: Exporting the KUBECONFIG variable in the user .bashrc file
          lineinfile:
            path: "{{ bashrc_file }}"
            state: present
            line: "{{ item }}"
          with_items:
            - 'export KUBECONFIG="{{ kube_config_file }}"'
          become: no

        - name: Creating alias 'k' for 'kubectl' in the user .bashrc file
          lineinfile:
            path: "{{ bashrc_file }}"
            state: present
            line: "{{ item }}"
          with_items:
            - "alias k='kubectl'"
          become: no

        - name: Download the kubeconfig file to admin the cluster in $HOME/.kube/config-ansible-cluster. Replace server localhost with the public ip.
          fetch:
            src: /var/lib/k0s/pki/admin.conf
            dest: ~/.kube/config-ansible-cluster
            flat: yes
          become: yes

        - name: Install Helm
          command: "snap install helm --classic"
          become: yes
      when: k0s_command_exists.rc != 0