---
version: '3.9'

# Consulted resources:
# https://www.jenkins.io/doc/book/installing/docker/
# https://muneebkhawaja.com/docker-based-jenkins-ci-cd/  OTTIMO
# https://gist.github.com/adelmofilho/5a30a87eaf1cd4a03052f37b516d6714
# https://akarshseggemu.medium.com/ci-docker-compose-to-containerize-jenkins-and-docker-in-docker-dind-agent-ad68bac9e1d8

# With Docker compatibility

networks:
  jenkins-network:

volumes:
  jenkins-docker-certs:
  jenkins-home:

services:
  ci-cd-dind:
    image: docker:dind
    container_name: jenkins-docker
    restart: unless-stopped
    privileged: true
    networks:
      jenkins-network:
        aliases:
          - docker
    ports:
      - "127.0.0.1:2376:2376"
    environment:
      DOCKER_TLS_CERTDIR: "/certs"
    volumes:
      - jenkins-docker-certs:/certs/client
      - jenkins-home:/var/jenkins_home

  jenkins:
    depends_on:
      - ci-cd-dind
    build:
      context: ./
      dockerfile: ./Dockerfile
    container_name: jenkins
    restart: unless-stopped
    networks:
      - jenkins-network
    ports:
      - "127.0.0.1:8080:8080"
    environment:
      JAVA_OPTS: "-Djava.awt.headless=true"
      DOCKER_HOST: "tcp://docker:2376"
      DOCKER_CERT_PATH: "/certs/client"
      DOCKER_TLS_VERIFY: 1
    user: root
    volumes:
      - jenkins-home:/var/jenkins_home
      - jenkins-docker-certs:/certs/client

# Without Docker compatibility

#networks:
#  jenkins-network:
#    driver: bridge
#
#volumes:
#  jenkins_data:
#
#services:
#  jenkins:
#    image: jenkins/jenkins:lts
#    container_name: jenkins
#    restart: always
#    privileged: true
#    user: root
#    ports:
#      - "8080:8080"
#      - "50000:50000"
#    volumes:
#      - jenkins_data:/var/jenkins_home
#      - /var/run/docker.sock:/var/run/docker.sock
#      - /usr/local/bin/docker:/usr/local/bin/docker
#    networks:
#      - jenkins-network